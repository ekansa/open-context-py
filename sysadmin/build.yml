- name: opencontext setup
  hosts: '{{vname}}'
  vars:
    user: "{{ ansible_ssh_user }}"
    aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    target: '{{vname}}'
    migrate: "{{do_migrate | default('true')}}"

    # postgres vars
    postgresql_python_library: python-psycopg2
    postgresql_user: postgres
    postgresql_group: postgres
    postgresql_databases:
      - name: example_db
    postgresql_users:
      - name: example_user
        password: supersecure

    # https://github.com/whiskerlabs/ansible-python
    python_version: 3.5.6
    python_bin: /usr/bin
    # python_setuptools_version: 40.2.0
    # python_pip_version: 10.0
    # python_virtualenv_version: 16.0.0
    # python_upgrade_packaging_tools: yes
    # python_install_root: /usr/local
    # python_apt_package_deps (default: [build-essential, libbz2-dev, libssl-dev, openssl, zlib1g-dev])
    # python_dnf_package_deps (default: [@Development tools, ncurses-devel, openssl-devel, zlib-devel])

  sudo: yes

  gather_facts: False
  pre_tasks:
    - name: Install python for Ansible
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
      register: output
      changed_when: output.stdout != ""
      tags: always
    - setup: # aka gather_facts
    - name: check apt last update
      stat: path=/var/cache/apt
      register: apt_cache_stat
    - name: update apt if needed
      apt: update_cache=yes
      when: ansible_date_time.epoch|float - apt_cache_stat.stat.mtime > 60*60*12

    - name: do apt-get update --fix-missing
      command: apt-get update --fix-missing
      
    - name: installing dependencies
      apt: pkg={{ item }} update_cache=yes state=present
      with_items:
        - python
        - python3 # [Debian -- Details of package python3 in jessie](https://packages.debian.org/jessie/python3) 3.4.2
        - python-pip
        - python3-pip
        - python-dev
        - python3-dev
      tags: install

  roles:
      # https://github.com/geerlingguy/ansible-role-postgresql (alt: https://github.com/ANXS/postgresql)
    - role: geerlingguy.postgresql
      become: yes
    - role: ansible-python
      become: yes
    # - role: geerlingguy.java
    #   when: "ansible_os_family == 'Debian'"
    #   java_packages:
    #     - openjdk-7-jdk
    - role: ansiblebit.oracle-java
      oracle_java_use_defaults: no
      oracle_java_apt_repository: 'deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main'
      oracle_java_apt_repository_key: 'EEA14886'
      oracle_java_cache_valid_time: 3600
      oracle_java_deb_package: 'oracle-java8-installer'
      oracle_java_debconf_package_default: 'oracle-java8-set-default'
      oracle_java_home: "/usr/lib/jvm/java-8-oracle"
      oracle_java_set_as_default: yes
      oracle_java_state: latest

    # - role: williamyeh.oracle-java # https://github.com/William-Yeh/ansible-oracle-java instead of role: geerlingguy.java
    - role: geerlingguy.solr

  tasks:
        
    # add repo to get latest version of python 2.7
    # - name: add-apt-repository ppa:fkrull/deadsnakes-python2.7
    #   apt_repository: repo='ppa:fkrull/deadsnakes-python2.7' state=present update_cache=true
    #   when: class in ['please', 'just', 'prod']


  handlers:
    - name: restart apache2
      service: name=apache2 state=restarted
